package es.crimarde.core.controller;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

public class UploadController {

    
    @RequestMapping(value="/upload", method=RequestMethod.GET)
    public @ResponseBody String provideUploadInfo() {
        return "La subida se debe realizar por POST en la misma URL.";
    }

    @RequestMapping(value="/upload", method=RequestMethod.POST)
    public @ResponseBody String handleFileUpload(@RequestParam("file") MultipartFile[] uploadingFiles) throws IOException{
        
    	for(MultipartFile uploadedFile : uploadingFiles) {
            File file = new File(uploadedFile.getOriginalFilename());
            
            if (!file.isEmpty()) {
                try {
                    byte[] bytes = file.getBytes();
                    BufferedOutputStream stream =
                            new BufferedOutputStream(new FileOutputStream(new File(name)));
                    stream.write(bytes);
                    stream.close();
                    return "You successfully uploaded " + name + "!";
                } catch (Exception e) {
                    return "You failed to upload " + name + " => " + e.getMessage();
                }
            } else {
                return "You failed to upload " + name + " because the file was empty.";
            }
        }
    	return "OK";
    }
    
    
    @RequestMapping(value="/upload2", method=RequestMethod.POST)
    public @ResponseBody String handleFileUpload(@RequestParam("file") MultipartFile[] uploadingFiles) throws IOException{
        
    	
    	return "Hola";
    }
    
    @RequestMapping(value="/upload3", method=RequestMethod.POST)
    public @ResponseBody String handleFileUpload(@RequestParam("file") File file){
      
    	return "Hola";
    }
}
