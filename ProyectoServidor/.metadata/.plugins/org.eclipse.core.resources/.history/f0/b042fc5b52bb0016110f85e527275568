# niveles de error -> TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF.
logging.level.org.springframework.web = INFO
logging.level.root = INFO
debug = false

#Cambiar el puerto por defecto de tomcat (colisiona con angular)
server.port = 8090

#Security
crimarde.dam.security.realm.name = PFINAL_DAM_REALM

#Logger  TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
#logging.level.root=FATAL
#logging.level.org.springframework.web=FATAL
#logging.level.org.springframework.controllers=FATAL
#logging.level.org.hibernate=FATAL
logging.file=logs/spring-boot-logging.log
#logging.config = /logging

#Configuracion de la base de datos
spring.jpa.database=MYSQL
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/misLibros
spring.datasource.username=cmdv
spring.datasource.password=admin
spring.datasource.continue-on-error=true


# Hibernate
hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
hibernate.show_sql=true
#hibernate.hbm2ddl.auto=update
#Nivel de debugp par hibernate
logging.level.org.hibernate.SQL=debug

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1	