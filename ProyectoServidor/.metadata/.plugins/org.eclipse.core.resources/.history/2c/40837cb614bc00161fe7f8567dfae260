package es.crimarde.helpers.impl;

import java.util.ArrayList;
import java.util.List;

import es.crimarde.helpers.OrikaMapper;
import es.crimarde.helpers.TransformerHelp;
import es.crimarde.model.Imagen;
import es.crimarde.model.Imagen;
import es.crimarde.negocio.ImageDTO;
import es.crimarde.negocio.ImageDTO;
import ma.glasnost.orika.MapperFacade;

public class ImageTransformerHelper implements TransformerHelp <Imagen, ImageDTO> {

	public ImageDTO entityToDto(Imagen imagen){
		MapperFacade mapper = OrikaMapper.getMapperFacade();
		if(null != imagen){
			return mapper.map(imagen, ImageDTO.class);
		} else {
			return null;
		}		
	}
	
	public Imagen dtoToEntity (ImageDTO imageDTO){	//Por hacer
		MapperFacade mapper = OrikaMapper.getMapperFacade();
		if(null != imageDTO){
			return mapper.map(imageDTO, Imagen.class);
		} else {
			return null;
		}
	}
	
	public List<Imagen> dtoToEntityList(List<ImageDTO> imageDtoList){
		List<Imagen> imageList = new ArrayList<>();
		
		for (ImageDTO imageDTO : imageDtoList) {
			imageList.add(dtoToEntity(imageDTO));
		}
		
		return imageList;
	}
	
	public List<ImageDTO> entityToDtoList(List<Imagen> imageList){
		List<ImageDTO> imageDTOList = new ArrayList<>();
		
		for (Imagen imagen : imageList) {
			imageDTOList.add(entityToDto(imagen));
		}
		
		return imageDTOList;
	}
	
	public List<ImageDTO> entityToDtoIterable(Iterable<Imagen> imageList){
		List<ImageDTO> imageDTOList = new ArrayList<>();
		
		for (Imagen imagen : imageList) {
			imageDTOList.add(entityToDto(imagen));
		}
		
		return imageDTOList;
	}

}
