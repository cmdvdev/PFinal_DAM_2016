package es.crimarde.core.controller;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

public class UploadController {

    
    @RequestMapping(value="/upload", method=RequestMethod.GET)
    public @ResponseBody String provideUploadInfo() {
        return "La subida se debe realizar por POST en la misma URL.";
    }
    
    @RequestMapping(value="/singleUpload", method=RequestMethod.POST )
    public @ResponseBody String handleSinglepleFileUpload(@RequestParam("file") MultipartFile file ){
    	
    	System.out.println("File Description:"+desc);
    	String fileName = null;
    	if (!file.isEmpty()) {
            try {
                fileName = file.getOriginalFilename();
                byte[] bytes = file.getBytes();
                BufferedOutputStream buffStream = 
                        new BufferedOutputStream(new FileOutputStream(new File(fileName)));
                buffStream.write(bytes);
                buffStream.close();
                return "You have successfully uploaded " + fileName;
            } catch (Exception e) {
                return "You failed to upload " + fileName + ": " + e.getMessage();
            }
        } else {
            return "Unable to upload. File is empty.";
        }
    }

    @RequestMapping(value="/multiUpload", method=RequestMethod.POST)
    public @ResponseBody String handleMultipleFileUpload(@RequestParam("file") MultipartFile[] uploadingFiles) throws IOException{
        
    	for(MultipartFile uploadedFile : uploadingFiles) {
            handleSinglepleFileUpload(uploadedFile);
        }
    	return "OK";
    }

}
