package es.crimarde.service.impl;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import es.crimarde.dao.EmployeeRepository;
import es.crimarde.helpers.impl.BookTransformerHelper;
import es.crimarde.model.Book;
import es.crimarde.negocio.BookDTO;

@Service
@Transactional
public class ServiceImpl implements es.crimarde.service.Service, adf {

	@Autowired
	private EmployeeRepository repository;
	
	@Autowired
	private BookTransformerHelper transformer;

	/* (non-Javadoc)
	 * @see es.crimarde.service.impl.adf#retrieve(java.lang.Integer)
	 */
	@Override
	public Book retrieve(Integer id) {
		Book emp = repository.findOne(id);
		return emp;
	}
	
	/* (non-Javadoc)
	 * @see es.crimarde.service.impl.adf#retrieveAll()
	 */
	@Override
	public Iterable<Book> retrieveAll(){
		return repository.findAll();
	}
	
	/* (non-Javadoc)
	 * @see es.crimarde.service.impl.adf#add(es.crimarde.negocio.BookDTO)
	 */
	@Override
	public void add(BookDTO bookDTO){
		if(null != bookDTO){
			repository.save(transformer.dtoToEntity(bookDTO));
		}
	}

	/* (non-Javadoc)
	 * @see es.crimarde.service.impl.adf#updateByProperties(es.crimarde.negocio.BookDTO)
	 */
	@Override
	public void updateByProperties(BookDTO bookDTO){
		if(null != null){
			repository.updateBook(bookDTO.getTitulo(), bookDTO.getAutor(), bookDTO.getSinopsis(), bookDTO.getPrecio());
		}
	}
	
	/* (non-Javadoc)
	 * @see es.crimarde.service.impl.adf#update(es.crimarde.negocio.BookDTO)
	 */
	@Override
	public void update(BookDTO bookDTO){
		if(null != bookDTO.getId()){
			Book book = retrieve(bookDTO.getId());
			String[] ignoreProperties = {"id"};
			BeanUtils.copyProperties(bookDTO, book, ignoreProperties);
			repository.save(book);
		}
	}
	
	/* (non-Javadoc)
	 * @see es.crimarde.service.impl.adf#delete(java.lang.Integer)
	 */
	@Override
	public void delete(Integer id){
		if(null != id){
			repository.delete(id);
		}
	}
	
	/* (non-Javadoc)
	 * @see es.crimarde.service.impl.adf#delete(es.crimarde.negocio.BookDTO)
	 */
	@Override
	public void delete(BookDTO bookDTO){
		if(null != bookDTO){
			repository.delete(transformer.dtoToEntity(bookDTO));
		}		
	}

}
