<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="0464ff00-6040-4ee9-9ef0-90bb8f8e86a0" activeEnvironment="Default" name="Puebas para PFinal" resourceRoot="" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="38dabb7d-9db0-4f1d-af3d-4079b96388ad" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://cmdvdev.com:8090" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://DESKTOP-GMQ6NLO:8089/</con:endpoint><con:endpoint>http://cmdvdev.com:8090</con:endpoint></con:endpoints><con:resource name="ObtenerLista" path="/lista/1" id="3784cfa1-b721-4ca3-a92b-e726c73b97ca"><con:settings/><con:parameters/><con:method name="lista" id="13b844f3-539d-4162-899f-d6d4ea811488" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:lis="http://cmdvdev.com/lista">lis:Response</con:element></con:representation><con:request name="ObtenerListaCompletaRequest" id="fa1cd077-2075-4cc5-aa45-12753f3af93b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://cmdvdev.com:8090</con:endpoint><con:request/><con:originalUri>http://cmdvdev.com/lista</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Add" path="" id="3784cfa1-b721-4ca3-a92b-e726c73b97ca"><con:settings/><con:parameters/><con:method name="Method 1" id="13b844f3-539d-4162-899f-d6d4ea811488" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="fa1cd077-2075-4cc5-aa45-12753f3af93b" mediaType="application/json"><con:settings/><con:endpoint>http://cmdvdev.com:8090</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="RecuperarEjemlar" path="/book/retrieve/1" id="3784cfa1-b721-4ca3-a92b-e726c73b97ca"><con:settings/><con:parameters/><con:method name="retrieve" id="13b844f3-539d-4162-899f-d6d4ea811488" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://cmdvdev.com/book/retrieve/1">ns:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Autentificado" id="fa1cd077-2075-4cc5-aa45-12753f3af93b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://cmdvdev.com:8090</con:endpoint><con:request/><con:originalUri>http://cmdvdev.com/book/retrieve/1</con:originalUri><con:credentials><con:username>user</con:username><con:password>pass</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request><con:request name="SinAutentificar" id="4f35a892-72c5-451c-ad2e-b0ef768af2ad" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://cmdvdev.com:8090</con:endpoint><con:request/><con:originalUri>http://cmdvdev.com/book/retrieve/1</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Random" path="/book/random" id="3784cfa1-b721-4ca3-a92b-e726c73b97ca"><con:settings/><con:parameters/><con:method name="random" id="13b844f3-539d-4162-899f-d6d4ea811488" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ran="http://cmdvdev.com/book/random">ran:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AutenticadoUser" id="fa1cd077-2075-4cc5-aa45-12753f3af93b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://cmdvdev.com:8090</con:endpoint><con:request/><con:originalUri>http://cmdvdev.com/book/random</con:originalUri><con:credentials><con:username>user</con:username><con:password>pass</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request><con:request name="AutenticadoAdmin" id="fa1cd077-2075-4cc5-aa45-12753f3af93b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://cmdvdev.com:8090</con:endpoint><con:request/><con:originalUri>http://cmdvdev.com/book/random</con:originalUri><con:credentials><con:username>admin</con:username><con:password>pass</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request><con:request name="SinAutenticar" id="fa1cd077-2075-4cc5-aa45-12753f3af93b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>http://cmdvdev.com:8090</con:endpoint><con:request/><con:originalUri>http://cmdvdev.com/book/random</con:originalUri><con:credentials><con:username/><con:password/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Delete" path="" id="3784cfa1-b721-4ca3-a92b-e726c73b97ca"><con:settings/><con:parameters/><con:method name="Method 1" id="13b844f3-539d-4162-899f-d6d4ea811488" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="fa1cd077-2075-4cc5-aa45-12753f3af93b" mediaType="application/json"><con:settings/><con:endpoint>http://cmdvdev.com:8090</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Update" path="" id="3784cfa1-b721-4ca3-a92b-e726c73b97ca"><con:settings/><con:parameters/><con:method name="Method 1" id="13b844f3-539d-4162-899f-d6d4ea811488" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="fa1cd077-2075-4cc5-aa45-12753f3af93b" mediaType="application/json"><con:settings/><con:endpoint>http://cmdvdev.com:8090</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="search" path="/search/tres" id="9032b0c0-bf5b-4a4a-a6d4-16f51a2eb1ed"><con:settings/><con:parameters/><con:method name="Method 1" id="833548ef-dfa4-4479-8f43-4554470bfa20" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:tres="http://cmdvdev.com/search/tres">tres:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tres="http://cmdvdev.com/search/tres">tres:Response</con:element></con:representation><con:request name="Request 1" id="38ce9cd7-276d-4216-ac9b-1ff7fd95818d" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://cmdvdev.com:8090</con:endpoint><con:request/><con:originalUri>http://cmdvdev.com/search/tres</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="bb3ecddc-dd2e-440a-b3c1-b921fa540590" name="Lista"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="8c66836e-813e-40da-8df5-fe016f7f7c18" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ObtenerListaCompleta" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Lista" id="a7723929-5f37-4de5-afbc-7ccbb867e3a3"><con:settings/><con:config service="http://cmdvdev.com:8090" resourcePath="/lista/1" methodName="lista" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Lista" id="fa1cd077-2075-4cc5-aa45-12753f3af93b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://cmdvdev.com:8090</con:endpoint><con:request/><con:originalUri>http://cmdvdev.com/lista</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="07c4c254-9f9b-4d60-b9e0-ac7c1a27b05e" name="RecuperarUnEjemplar"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="64bea540-973e-44ec-bf5f-51b4f0e8feee" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Autenticado" searchProperties="true"><con:description>Se hace una peticion con un usuario permitido (user y password) y se recupera un elemento de la lista</con:description><con:settings/><con:testStep type="restrequest" name="RetrieveAutenticado" id="b2d1e5ac-f4f3-4dea-901a-9a6e01ed7d19"><con:settings/><con:config service="http://cmdvdev.com:8090" resourcePath="/book/retrieve/1" methodName="retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveAutenticado" id="fa1cd077-2075-4cc5-aa45-12753f3af93b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://cmdvdev.com:8090</con:endpoint><con:request/><con:originalUri>http://cmdvdev.com/book/retrieve/1</con:originalUri><con:assertion type="Simple Contains" id="9f59202a-eb17-4471-bef3-08111e5bf07f" name="Contains"><con:configuration><token>status</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="1a909da8-73fa-4ea0-89c5-64f72f7d699c" name="Contains data"><con:configuration><token>data</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="fdeb36dc-a2aa-438b-9a3a-985b010e8115" name="Contains titulo"><con:configuration><token>titulo</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="521912be-610d-4de9-b54e-00ca1614b597" name="JsonPath Match autor"><con:configuration><path>$.data.autor</path><content>Saruman</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4146d433-ca1c-4f5f-a444-b1b5132043cd" name="JsonPath Match Titulo"><con:configuration><path>data.titulo</path><content>titulo</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>user</con:username><con:password>pass</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="67136e3c-5e6c-44f3-85b3-99a4d51c5f69" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SinAutenticar" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="RetrieveSinAutentificar" id="b4f976c4-c2d0-4395-abbf-541219f92f1e"><con:settings/><con:config service="http://cmdvdev.com:8090" resourcePath="/book/retrieve/1" methodName="retrieve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RetrieveSinAutentificar" id="4f35a892-72c5-451c-ad2e-b0ef768af2ad" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://cmdvdev.com:8090</con:endpoint><con:request/><con:originalUri>http://cmdvdev.com/book/retrieve/1</con:originalUri><con:assertion type="XPath Match" id="b0238795-b921-44ad-a84b-0212ff2d913f" name="XPath Match"><con:configuration><path>/data//text()</path><content>HTTP Status 401 Unauthorized : Full authentication is required to access this resource
</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="aa5750a3-8dc1-46bc-a800-e205e1924af0" name="RecuperarEjemplarAleatorio"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="f6929a41-d37e-4ea3-87c0-48f433ce7570" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UsuarioAutenticado" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="AutenticadoUser" id="74a8a9ec-0a45-4b19-b524-86bfe4e9e303"><con:settings/><con:config service="http://cmdvdev.com:8090" resourcePath="/book/random" methodName="random" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AutenticadoUser" id="fa1cd077-2075-4cc5-aa45-12753f3af93b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://cmdvdev.com:8090</con:endpoint><con:request/><con:originalUri>http://cmdvdev.com/book/random</con:originalUri><con:credentials><con:username>user</con:username><con:password>pass</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="db5c1b78-4636-40aa-ac98-800dc092d521" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AdminAutenticado" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="AutenticadoAdmin" id="b80a12dd-0d81-4293-9954-a18415fa8eec"><con:settings/><con:config service="http://cmdvdev.com:8090" resourcePath="/book/random" methodName="random" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AutenticadoAdmin" id="fa1cd077-2075-4cc5-aa45-12753f3af93b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://cmdvdev.com:8090</con:endpoint><con:request/><con:originalUri>http://cmdvdev.com/book/random</con:originalUri><con:credentials><con:username>admin</con:username><con:password>pass</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e182c5a7-c048-40fa-b6ef-c38299061bc7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RecuperarEjemplarUsuarioSinAutenticar" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="SinAutenticar" id="cfaec363-4f2a-4e56-942c-1055bcf167da"><con:settings/><con:config service="http://cmdvdev.com:8090" resourcePath="/book/random" methodName="random" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="SinAutenticar" id="fa1cd077-2075-4cc5-aa45-12753f3af93b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>http://cmdvdev.com:8090</con:endpoint><con:request/><con:originalUri>http://cmdvdev.com/book/random</con:originalUri><con:credentials><con:username/><con:password/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:restMockService id="85061849-5d95-41df-ba19-94679646fb89" port="8091" path="/" host="DESKTOP-GMQ6NLO" name="REST MockService" docroot=""><con:settings/><con:properties/><con:restMockAction name="/lista" method="GET" resourcePath="/lista" id="b87811c0-7c17-4bc1-941d-c74beec0936d"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="fd848342-d27c-4c97-87f3-2956b16d864c" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
"status": "OK",
"data": [
{
"id": 1,
"titulo": "titulo",
"autor": "Saruman",
"sinopsis": "resumen del libro",
"imagen": null,
"precio": 19.99
},
{
"id": 2,
"titulo": "titulo",
"autor": "Saruman",
"sinopsis": "resumen del libro",
"imagen": null,
"precio": 19.99
},
{
"id": 3,
"titulo": "titulo",
"autor": "Saruman",
"sinopsis": "resumen del libro",
"imagen": null,
"precio": 19.99
},
{
"id": 4,
"titulo": "titulo",
"autor": "Saruman",
"sinopsis": "resumen del libro",
"imagen": null,
"precio": 19.99
},
{
"id": 5,
"titulo": "titulo",
"autor": "Saruman",
"sinopsis": "resumen del libro",
"imagen": null,
"precio": 19.99
}
]
}</con:responseContent><con:header><con:name/><con:value/></con:header></con:response></con:restMockAction><con:restMockAction name="" method="GET" resourcePath="" id="667d5381-276d-4771-aabc-76d74bef758e"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="a4a37603-a30b-482a-84d4-0beac7f63b5f" httpResponseStatus="200"><con:settings/><con:responseContent/></con:response></con:restMockAction><con:restMockAction name="/book/retrieve/1" method="GET" resourcePath="/book/retrieve/1" id="84729183-720f-4009-a47a-d7ece483e9bf"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="6bf71af2-0063-4212-a6c2-3e5c16a71d0a" httpResponseStatus="200"><con:settings/></con:response></con:restMockAction><con:restMockAction name="/book/random" method="GET" resourcePath="/book/random" id="956815e3-3f97-4d34-84fa-a04a3e06f167"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="21b25a66-47d5-4713-a8d1-ab01b4560d22" httpResponseStatus="200"><con:settings/></con:response></con:restMockAction><con:restMockAction name="" method="GET" resourcePath="" id="b6677a35-fd29-4399-bfe6-a7c306ba2fa5"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="5f3b3142-c630-4c2d-828e-cca0c941ff0e" httpResponseStatus="200"><con:settings/></con:response></con:restMockAction><con:restMockAction name="" method="GET" resourcePath="" id="fd1e939c-e5aa-411a-898c-5066b1228def"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="2f1de880-0414-4c82-8c36-74571e9868bd" httpResponseStatus="200"><con:settings/></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>